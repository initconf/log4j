# script to identify exploit attempts for log4j:  CVE-2021-44228
# primarily based on HTTP GET requests seen in syslogs

# Regexp:  jndi:ldap:\/\/([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}:[0-9]+\/Basic\/Command\/Base64\/(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?"

module HTTP;

export {
        redef enum Notice::Type += {
                # Indicates that a host performing SQL injection attacks was detected.
                log4jURI,
        };

        redef Config::config_files += { "/YURT/feeds/zeek-config/log4j-cve-2021-44228"};
        option log4j_regexp:pattern = /jndi:ldap:\/\/([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}:[0-9]+\/Basic\/Command\/Base64\/([A-Za-z0-9+\/]{4})*([A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?/ ;

        redef record Notice::Info += {
                method: string &optional &log;
                URL: string &optional &log;
        } ;

}

event http_request(c: connection, method: string, original_URI: string, unescaped_URI: string, version: string) &priority=3
{
        local url = build_url_http(c$http);
        local message = fmt("%s %s", c$http$method, url);


        if ( log4j_regexp in unescaped_URI )
        {
         NOTICE([$note=log4jURI, $msg=message, $method=c$http$method, $conn=c, $URL=url, $identifier=cat(c$id$orig_h),$suppress_for=15 min]);
        }
}


#hook Notice::policy(n: Notice::Info)
#{
#  if ( n$note == HTTP::log4jURI && n$src !in LBL::scan_hosts)
#        {
#        add n$actions[Notice::ACTION_EMAIL];
#        #add n$actions[Notice::ACTION_DROP];
#        #Notice::email_notice_to(n, "ir-reports@lbl.gov", T);
#        }
#}


